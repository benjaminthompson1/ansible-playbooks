################################################################################
# Configures JES2 checkpoints on z/OS
#
# Requirements:
# - IBM z/OS Core Collection
#
# Usage:
# ansible-playbook -i inventories/inventory.yml sys_config_jes_checkpoint.yml
################################################################################

---
- name: JES Checkpoint Configuration
  hosts: z31c_s0w1
  collections:
    - ibm.ibm_zos_core
  gather_facts: yes  

  vars:
    adcd_ver: Z31C
    ckpt_volume: C3SYS1

  environment: "{{ environment_vars }}"

  tasks:
    - name: Alter JES JOBCLASS for STC
      zos_operator:
        cmd: "$T JOBCLASS(STC),OUTDISP=(HOLD,HOLD)"
      register: jobclass_result

    - name: Delete existing JES CKPT datasets
      zos_tso_command:
        commands:
          - DELETE 'SYS1.{{ adcd_ver }}.CKPT1'
          - DELETE 'SYS1.{{ adcd_ver }}.CKPT2'
      ignore_errors: true
      register: delete_result

    - name: Allocate new JES CKPT datasets
      zos_tso_command:
        commands:
          - ALLOC DA('SYS1.{{ adcd_ver }}.CKPT1') DSORG(PSU) SPACE(300,0) TRACKS VOLUME({{ ckpt_volume }}) UNIT(SYSDA)
          - ALLOC DA('SYS1.{{ adcd_ver }}.CKPT2') DSORG(PSU) SPACE(300,0) TRACKS VOLUME({{ ckpt_volume }}) UNIT(SYSDA)
      register: alloc_result

    - name: Alter CKPTDEF for new checkpoint datasets
      zos_operator:
        cmd: "{{ item }}"
      loop:
        - "$T CKPTDEF,NEWCKPT1=(DSNAME=SYS1.{{ adcd_ver }}.CKPT1,VOLSER={{ ckpt_volume }})"
        - "$T CKPTDEF,NEWCKPT2=(DSNAME=SYS1.{{ adcd_ver }}.CKPT2,VOLSER={{ ckpt_volume }})"
        - "$T CKPTDEF,OPVERIFY=NO"
      register: ckptdef_result

    - name: Copy and update JES2PARM
      block:
        - name: Copy JES2PARM from ADCD to USER PARMLIB
          zos_copy:
            src: "ADCD.{{ adcd_ver }}.PARMLIB(JES2PARM)"
            dest: "USER.{{ adcd_ver }}.PARMLIB(JES2PARM)"
            remote_src: true
          register: parmlib_copy_result

        - name: Insert NEWCKPT datasets in JES2PARM
          zos_blockinfile:
            src: "USER.{{ adcd_ver }}.PARMLIB(JES2PARM)"
            marker: "/* {mark} ANSIBLE MANAGED BLOCK */"
            insertafter: "MODE=DUPLEX,"
            block: |
              NEWCKPT1=(DSNAME=SYS1.{{ adcd_ver }}.CKPT1,VOLSER={{ ckpt_volume }}),
              NEWCKPT2=(DSNAME=SYS1.{{ adcd_ver }}.CKPT2,VOLSER={{ ckpt_volume }}),
              OPVERIFY=NO,
          register: parmlib_update_result
      register: parmlib_block_result

    - name: Copy and update JES2 PROC
      block:
        - name: Copy JES2 PROC from ADCD to USER PROCLIB
          zos_copy:
            src: "ADCD.{{ adcd_ver }}.PROCLIB(JES2)"
            dest: "USER.{{ adcd_ver }}.PROCLIB(JES2)"
            remote_src: true
          register: proclib_copy_result

        - name: Update JES2 PROC HASPPARM DD
          zos_lineinfile:
            src: "USER.{{ adcd_ver }}.PROCLIB(JES2)"
            regexp: "^//HASPPARM"
            line: "//HASPPARM  DD   DSN=USER.&SYSVER..PARMLIB(&MEMBER),DISP=SHR"
          register: proclib_update_result
      register: proclib_block_result

    - name: Display detailed execution summary
      debug:
        msg: |
          JES Checkpoint Configuration Summary
          ==================================
          Timestamp: {{ ansible_date_time.iso8601 }}
          Host: {{ inventory_hostname }}
          ADCD Version: {{ adcd_ver }}
          Checkpoint Volume: {{ ckpt_volume }}

          Operation Status:
          ----------------
          1. JES JOBCLASS Configuration
             - Status: {{ jobclass_result.failed | default(false) | ternary('Failed', 'Success') }}
             - Changed: {{ jobclass_result.changed | default(false) | ternary('Yes', 'No') }}
             {% if jobclass_result.failed | default(false) %}
             - Error: {{ jobclass_result.msg | default('Unknown error') }}
             {% endif %}

          2. Checkpoint Dataset Management
             - Delete Operations:
               * Status: {{ delete_result.failed | default(false) | ternary('Failed', 'Success') }}
               * Changed: {{ delete_result.changed | default(false) | ternary('Yes', 'No') }}
             - Allocation Operations:
               * Status: {{ alloc_result.failed | default(false) | ternary('Failed', 'Success') }}
               * Changed: {{ alloc_result.changed | default(false) | ternary('Yes', 'No') }}

          3. CKPTDEF Configuration
             - Status: {{ ckptdef_result.failed | default(false) | ternary('Failed', 'Success') }}
             - Changed: {{ ckptdef_result.changed | default(false) | ternary('Yes', 'No') }}
             {% if ckptdef_result.results is defined %}
             - Details:
               {% for result in ckptdef_result.results %}
               * Command {{ loop.index }}: {{ result.failed | default(false) | ternary('Failed', 'Success') }}
               {% endfor %}
             {% endif %}

          4. JES2PARM Updates
             - Copy Operation:
               * Status: {{ parmlib_copy_result.failed | default(false) | ternary('Failed', 'Success') }}
               * Changed: {{ parmlib_copy_result.changed | default(false) | ternary('Yes', 'No') }}
             - Update Operation:
               * Status: {{ parmlib_update_result.failed | default(false) | ternary('Failed', 'Success') }}
               * Changed: {{ parmlib_update_result.changed | default(false) | ternary('Yes', 'No') }}

          5. JES2 PROC Updates
             - Copy Operation:
               * Status: {{ proclib_copy_result.failed | default(false) | ternary('Failed', 'Success') }}
               * Changed: {{ proclib_copy_result.changed | default(false) | ternary('Yes', 'No') }}
             - Update Operation:
               * Status: {{ proclib_update_result.failed | default(false) | ternary('Failed', 'Success') }}
               * Changed: {{ proclib_update_result.changed | default(false) | ternary('Yes', 'No') }}

          Overall Status:
          --------------
          Configuration Success: {{ not (jobclass_result.failed | default(false) or 
                                      alloc_result.failed | default(false) or 
                                      ckptdef_result.failed | default(false) or 
                                      parmlib_block_result.failed | default(false) or 
                                      proclib_block_result.failed | default(false)) }}
          
          Changes Made: {{ (jobclass_result.changed | default(false) or 
                          alloc_result.changed | default(false) or 
                          ckptdef_result.changed | default(false) or 
                          parmlib_block_result.changed | default(false) or 
                          proclib_block_result.changed | default(false)) | ternary('Yes', 'No') }}

          Datasets Configured:
          ------------------
          - Checkpoint 1: SYS1.{{ adcd_ver }}.CKPT1
          - Checkpoint 2: SYS1.{{ adcd_ver }}.CKPT2
          - Updated PARMLIB: USER.{{ adcd_ver }}.PARMLIB(JES2PARM)
          - Updated PROCLIB: USER.{{ adcd_ver }}.PROCLIB(JES2)
      when: true