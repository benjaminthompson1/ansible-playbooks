################################################################################
# Configures JES2 checkpoints on z/OS
#
# Requirements:
# - IBM z/OS Core Collection
#
# Usage:
# ansible-playbook -i inventories/inventory.yml configure_jes_checkpoint.yml
################################################################################

---
- name: JES Checkpoint Configuration
  hosts: z31a_s0w1
  collections:
    - ibm.ibm_zos_core
  gather_facts: no

  vars:
    adcd_ver: Z31A
    ckpt_volume: A3SYS1

  environment: "{{ environment_vars }}"

  tasks:
    - name: Alter JES JOBCLASS for STC
      zos_operator:
        cmd: "$T JOBCLASS(STC),OUTDISP=(HOLD,HOLD)"

    - name: Delete existing JES CKPT datasets
      zos_tso_command:
        commands:
          - DELETE 'SYS1.{{ adcd_ver }}.CKPT1'
          - DELETE 'SYS1.{{ adcd_ver }}.CKPT2'
      ignore_errors: true

    - name: Allocate new JES CKPT datasets
      zos_tso_command:
        commands:
          - ALLOC DA('SYS1.{{ adcd_ver }}.CKPT1') DSORG(PSU) SPACE(300,0) TRACKS VOLUME({{ ckpt_volume }}) UNIT(SYSDA)
          - ALLOC DA('SYS1.{{ adcd_ver }}.CKPT2') DSORG(PSU) SPACE(300,0) TRACKS VOLUME({{ ckpt_volume }}) UNIT(SYSDA)

    - name: Alter CKPTDEF for new checkpoint datasets
      zos_operator:
        cmd: "{{ item }}"
      loop:
        - "$T CKPTDEF,NEWCKPT1=(DSNAME=SYS1.{{ adcd_ver }}.CKPT1,VOLSER={{ ckpt_volume }})"
        - "$T CKPTDEF,NEWCKPT2=(DSNAME=SYS1.{{ adcd_ver }}.CKPT2,VOLSER={{ ckpt_volume }})"
        - "$T CKPTDEF,OPVERIFY=NO"

    - name: Copy and update JES2PARM
      block:
        - name: Copy JES2PARM from ADCD to USER PARMLIB
          zos_copy:
            src: "ADCD.{{ adcd_ver }}.PARMLIB(JES2PARM)"
            dest: "USER.{{ adcd_ver }}.PARMLIB(JES2PARM)"
            remote_src: true

        - name: Insert NEWCKPT datasets in JES2PARM
          zos_blockinfile:
            src: "USER.{{ adcd_ver }}.PARMLIB(JES2PARM)"
            marker: "/* {mark} ANSIBLE MANAGED BLOCK */"
            insertafter: "MODE=DUPLEX,"
            block: |
              NEWCKPT1=(DSNAME=SYS1.{{ adcd_ver }}.CKPT1,VOLSER={{ ckpt_volume }}),
              NEWCKPT2=(DSNAME=SYS1.{{ adcd_ver }}.CKPT2,VOLSER={{ ckpt_volume }}),
              OPVERIFY=NO,

    - name: Copy and update JES2 PROC
      block:
        - name: Copy JES2 PROC from ADCD to USER PROCLIB
          zos_copy:
            src: "ADCD.{{ adcd_ver }}.PROCLIB(JES2)"
            dest: "USER.{{ adcd_ver }}.PROCLIB(JES2)"
            remote_src: true

        - name: Update JES2 PROC HASPPARM DD
          zos_lineinfile:
            src: "USER.{{ adcd_ver }}.PROCLIB(JES2)"
            regexp: "^//HASPPARM"
            line: "//HASPPARM  DD   DSN=USER.&SYSVER..PARMLIB(&MEMBER),DISP=SHR"