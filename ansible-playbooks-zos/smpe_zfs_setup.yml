################################################################################
# Playbook: SMP/E ZFS Setup
# Purpose: Creates and mounts SMP/E ZFS filesystem on z/OS
# Usage: ansible-playbook -i inventories/inventory.yml smpe_zfs_setup.yml
# Prerequisites: 
#   - IBM z/OS Core collection installed
#   - Valid z/OS credentials configured
#   - Appropriate permissions for ZFS operations
################################################################################
---
- name: SMP/E ZFS Setup
  hosts: z31c_s0w1
  collections:
    - ibm.ibm_zos_core
  gather_facts: no
  environment: "{{ environment_vars }}"
  vars:
    zfs_name: SMPE.SMPNTS.ZFS
    mount_point: /u/smpe/smpnts
    primary_cylinders: 100
    secondary_cylinders: 50

  tasks:
    - name: Check if ZFS dataset already exists
      zos_data_set:
        name: "{{ zfs_name }}"
        state: present
      register: zfs_check
      failed_when: false
      check_mode: yes

    - name: Check if mount point exists
      stat:
        path: "{{ mount_point }}"
      register: mount_point_check
      failed_when: mount_point_check.stat.exists and not mount_point_check.stat.isdir

    - name: Create ZFS dataset
      zos_data_set:
        name: "{{ zfs_name }}"
        type: zfs
        space_primary: "{{ primary_cylinders }}"
        space_secondary: "{{ secondary_cylinders }}"
        space_type: cyl
        state: present
      when: not zfs_check.changed
      register: zfs_create_result
      failed_when: 
        - zfs_create_result.failed is defined
        - zfs_create_result.failed

    - name: Format the ZFS
      zos_mvs_raw:
        pgm: IOEAGFMT
        parm: "-aggregate {{ zfs_name }} -compat"
      register: format_result
      failed_when: format_result.rc > 4
      when: not zfs_check.changed

    - name: Create mount point directory if it doesn't exist
      file:
        path: "{{ mount_point }}"
        state: directory
        mode: '0755'
      when: not mount_point_check.stat.exists
      register: dir_create_result
      failed_when: dir_create_result.failed | default(false)

    # Simplified mount check
    - name: Check if filesystem is mounted
      shell: df -k "{{ mount_point }}" | grep "{{ zfs_name }}"
      register: mount_status
      failed_when: false
      changed_when: false

    # Modified mount task
    - name: Mount the ZFS
      zos_mount:
        src: "{{ zfs_name }}"
        path: "{{ mount_point }}"
        fs_type: ZFS
        state: present
        persistent: true
      when: mount_status.rc != 0
      register: mount_result

    - name: Verify mount was successful
      shell: df -k "{{ mount_point }}" | grep "{{ zfs_name }}"
      register: final_mount_check
      failed_when: final_mount_check.rc != 0
      changed_when: false

    - name: Display completion status
      debug:
        msg: "ZFS setup completed successfully. Mounted at {{ mount_point }}"
      when: final_mount_check.rc == 0