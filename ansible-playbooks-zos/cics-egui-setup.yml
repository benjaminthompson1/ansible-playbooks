# This Ansible playbook sets up the CICS EGUI environment for a specified target.
# -----------------------------------------------------------------------------
# General usage:
#   ansible-playbook -i <inventory> <playbook>
# 
# Example:
#   ansible-playbook -i inventories cics-egui-setup.yml
#   ansible-playbook -i inventories cics-egui-setup.yml -v
# -----------------------------------------------------------------------------
---
- hosts: z31a_s0w1
  collections:
    - ibm.ibm_zos_core
  gather_facts: no

  environment: "{{ environment_vars }}"

  tasks:
    # Verify connectivity with the target host using zos_ping
    - name: Ping using zos_ping
      zos_ping:
      register: zos_ping_result

    - name: Display response from zos_ping
      debug:
        msg: "{{ zos_ping_result }}"

    # Create and define the VSAM data sets
    - name: Submit DFH$ECAT to create catalog data set and wait for the job to finish.
      zos_job_submit:
        src: "IBMUSER.GIT.JCL.CNTL(DFH$ECAT)"
        location: DATA_SET
        wait: true
        wait_time_s: 60
      register: zos_job_submit_result 

    - name: Display response from DFH$ECAT job submission (verbose mode)
      debug:
        msg: "{{ zos_job_submit_result }} with verbosity 1"
        verbosity: 1

    - name: Submit DFH$CNF to create configuration data set and wait for the job to finish.
      zos_job_submit:
        src: "IBMUSER.GIT.JCL.CNTL(DFH$ECNF)"
        location: DATA_SET
        wait: true
        wait_time_s: 60
      register: zos_job_submit_result 

    - name: Display response from DFH$CNF job submission (verbose mode)
      debug:
        msg: "{{ zos_job_submit_result }} with verbosity 1"
        verbosity: 1

    # Submit CICS system definition for zOffice
    - name: Submit CICSCSD to create definition for zOffice and wait for the job to finish.
      zos_job_submit:
        src: IBMUSER.GIT.JCL.CNTL(CICSCSD)
        location: DATA_SET
        wait: true
        wait_time_s: 60
      register: zos_job_submit_result 

    - name: Display response from CICSCSD job submission (verbose mode)
      debug:
        msg: "{{ zos_job_submit_result }} with verbosity 1"
        verbosity: 1

    # Insert DFLTUSER to CICS SIP configuration
    - name: Insert DFLTUSER to CICS SIP.
      zos_lineinfile:
        src: DFH610.SYSIN(DFH$SIP1)
        insertbefore: '^*TCPIP=YES'
        line: 'DFLTUSER=IBMUSER                          ANSIBLE ADDED IBMUSER'
      register: zos_lineinfile_result

    - name: Display response from Insert DFLTUSER to CICS SIP (verbose mode)
      debug:
        msg: "{{ zos_lineinfile_result }} with verbosity 1"
        verbosity: 1