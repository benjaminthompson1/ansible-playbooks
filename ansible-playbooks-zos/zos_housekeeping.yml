################################################################################
# Playbook Name: z/OS Housekeeping
# Purpose:
#   - Automates routine housekeeping tasks on z/OS systems.
#   - Handles submission of JCL jobs, management of temporary files,
#     purging of old datasets, and other maintenance activities.
#
# Requirements:
#   - Ansible 2.9 or higher
#   - Access to z/OS system with appropriate permissions
#   - IBM z/OS Core Collection installed
#
# Usage:
#   - Basic execution: ansible-playbook -i inventories zos_housekeeping.yml
#   - With verbosity: ansible-playbook -i inventories zos_housekeeping.yml -v
#   - Custom wait time: ansible-playbook -i inventories zos_housekeeping.yml -e wait_time_s=60
################################################################################

---
- name: z/OS housekeeping
  hosts: z31a_s0w1
  gather_facts: yes
  collections:
    - ibm.ibm_zos_core

  # Environment setup and global variables
  environment: "{{ environment_vars }}"
  vars:
    cntl_hlq: IBMUSER.GIT.JCL.CNTL  # Control HLQ for JCL jobs
    temp_files_directory: /tmp      # Directory for temporary files
    temp_file_age_threshold: 20d    # Age threshold for temporary files
    backup_config_file_age_threshold: 2m  # Age threshold for zOSMF backup files
    wait_time_seconds: 120          # Wait time for z/OS batch and JES 

  tasks:
    # Ping the target host to check connectivity
    - name: Ping using zos_ping
      zos_ping:

    # Submit LOGREC and wait for the job to finish
    - name: Submit LOGREC and wait for the job to finish
      zos_job_submit:
        src: "{{ cntl_hlq }}(LOGREC)"
        location: DATA_SET    
        wait_time_s: "{{ wait_time_seconds }}"   
        max_rc: 0                   
      register: logrec_result

    # Submit DSSDFRAG without waiting
    - name: Submit DSSDFRAG
      zos_job_submit:
        src: "{{ cntl_hlq }}(DSSDFRAG)"
        location: DATA_SET
        wait_time_s: "{{ wait_time_seconds }}"
        max_rc: 4
      register: dssdfrag_result

    # Submit DCOLLECT and wait for the job to finish
    - name: Submit DCOLLECT and wait for the job to finish
      zos_job_submit:
        src: "{{ cntl_hlq }}(DCOLLECT)"
        location: DATA_SET 
        wait_time_s: "{{ wait_time_seconds }}" 
        max_rc: 4              
      register: dcollect_result

    # Purge JES2 output datasets older than 21 days
    - name: Execute JES2 purge and wait for response
      zos_operator:
        cmd: "\\$P O JQ,ALL,A>21"
        wait_time_s: "{{ wait_time_seconds }}"
      register: jes2_purge_result

    # Find and delete temp files older than specified age
    - name: Find tmp files older than {{ temp_file_age_threshold }}
      find:
        paths: "{{ temp_files_directory }}"
        age: "{{ temp_file_age_threshold }}"
        recurse: yes
      register: tmp_files_to_delete

    - name: Delete old tmp files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ tmp_files_to_delete.files }}"
      when: tmp_files_to_delete.matched > 0

    # List z/OS DUMP datasets matching the specified pattern
    - name: List dump datasets
      zos_find:
        patterns:
        - SYS1.S0W1.Z31A.DMP*
        age: 1w
      register: list_dump_datasets

    - name: Delete DUMP datasets
      zos_data_set:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ list_dump_datasets.data_sets }}"
      when: list_dump_datasets.matched > 0
      register: delete_dump_datasets_result

# End of the playbook
