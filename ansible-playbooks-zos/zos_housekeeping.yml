################################################################################
# Usage:
# ansible-playbook -i <inventory> z25c_housekeeping.yml
# Required Variables:
# - cntl_hlq: Control HLQ for JCL jobs
# - zwic_dir: Directory for zWIC files
# Optional Variables:
# - wait_time_s: Default wait time for job submissions (default: 30 seconds)
# - zwic_file_age: Age threshold for zWIC files (default: 10 days)
# Description:
# This playbook performs various housekeeping tasks on a z/OS system, including
# submitting JCL jobs, executing operator commands, and deleting old files.
# The required variables 'cntl_hlq' and 'zwic_dir' must be defined in the inventory.
# Optional variables can be set in the playbook or passed in via the command line.
# Example:
# ansible-playbook -i inventories zos_housekeeping.yml
# ansible-playbook -i inventories zos_housekeeping.yml -v
# ansible-playbook -i inventories zos_housekeeping.yml -e wait_time_s=60
################################################################################
---
- name: z/OS housekeeping
  hosts: ben_s0w1
  gather_facts: yes
  collections:
    - ibm.ibm_zos_core

  environment: "{{ environment_vars }}"

  vars:
    # Control HLQ for JCL jobs
    cntl_hlq: IBMUSER.GIT.JCL.CNTL
    # Default wait time for job submissions
    wait_time_s: 30
    # Directory for zWIC files
    zwic_dir: /global/zwic
    # Age threshold for zWIC files
    zwic_file_age: 10d
    # Directory for tmp files
    tmp_dir: /tmp
    # Age threshold for tmp files
    tmp_file_age: 20d

  tasks:
    # Ping the target host to check connectivity
    - name: Ping using zos_ping
      zos_ping:

    # Submit LOGREC and wait for the job to finish
    - name: Submit LOGREC and wait for the job to finish
      zos_job_submit:
        src: "{{ cntl_hlq }}(LOGREC)"
        location: DATA_SET
        wait: true
        wait_time_s: "{{ wait_time_s }}"
      register: logrec_result
      retries: 3
      delay: 30
      notify:
        - Handle job submit result

    # Submit DSSDFRAG and wait for the job to finish
    - name: Submit DSSDFRAG and wait for the job to finish
      zos_job_submit:
        src: "{{ cntl_hlq }}(DSSDFRAG)"
        location: DATA_SET
        wait: true
        wait_time_s: "{{ wait_time_s }}"
      register: dssdfrag_result
      retries: 3
      delay: 30
      notify:
        - Handle job submit result

    # Submit DCOLLECT and wait for the job to finish
    - name: Submit DCOLLECT and wait for the job to finish
      zos_job_submit:
        src: "{{ cntl_hlq }}(DCOLLECT)"
        location: DATA_SET
        wait: true
        wait_time_s: "{{ wait_time_s }}"
      register: dcollect_result
      retries: 3
      delay: 30
      notify:
        - Handle job submit result

    # Submit HBOJBDC2 sending DCOLLECT data to the Data Streamer
    - name: Submit HBOJBDC2 and wait for the job to finish
      zos_job_submit:
        src: "{{ cntl_hlq }}(HBOJBDC2)"
        location: DATA_SET
        wait: true
        wait_time_s: "{{ wait_time_s }}"
      register: hbojbdc2_result
      retries: 3
      delay: 30
      notify:
        - Handle job submit result

    # Purge JES2 output datasets older than 21 days
    - name: Execute JES2 purge and wait for response
      zos_operator:
        cmd: "$P O JQ,ALL,A>21"
        wait: true
        wait_time_s: "{{ wait_time_s }}"
      register: jes2_purge_result
      notify:
        - Handle job submit result

    # Find and delete zWIC files older than specified age
    - name: Find zWIC files older than {{ zwic_file_age }}
      find:
        paths: "{{ zwic_dir }}"
        age: "{{ zwic_file_age }}"
        recurse: yes
      register: zwic_files_to_delete

    - name: Delete old zWIC files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ zwic_files_to_delete.files }}"
      when: zwic_files_to_delete.matched > 0
      notify:
        - Handle file deletion result

    # Find and delete temp files older than specified age
    - name: Find tmp files older than {{ tmp_file_age }}
      find:
        paths: "{{ tmp_dir }}"
        age: "{{ tmp_file_age }}"
        recurse: yes
      register: tmp_files_to_delete

    - name: Delete old tmp files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ tmp_files_to_delete.files }}"
      when: tmp_files_to_delete.matched > 0
      notify:
        - Handle file deletion result

    # List z/OS DUMP datasets matching the specified pattern.
    - name: List dump datasets
      zos_find:
        patterns:
        - SYS1.S0W1.Z25C.DMP*
      register: list_dump_datasets

    - name: Display DUMP datasets
      debug:
        var: list_dump_datasets

  handlers:
    # Handle job submission failures
    - name: Handle job submit result
      debug:
        msg: "{{ item }}"
      with_items:
        - "{{ logrec_result }}"
        - "{{ dssdfrag_result }}"
        - "{{ dcollect_result }}"
        - "{{ jes2_purge_result }}"
      when: item is failed

    # Handle file deletion failures
    - name: Handle file deletion result
      debug:
        msg: "{{ item }}"
      with_items: "{{ zwic_files_to_delete.files }}"
      when: item
    