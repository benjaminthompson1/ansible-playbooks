################################################################################
# Playbook Name: COBOL Customization Setup
#
# Purpose:
#   This playbook automates the setup and customization of COBOL procedures on a z/OS system.
#   It performs the following tasks:
#   - Verifies connectivity to the target host
#   - Copies COBOL procedures from the COBOL HLQ to the USER PROCLIB
#   - Updates the IGYQC, IGYQCB, and IGYQCBG procedures with custom parameters
#
# Requirements:
#   - Ansible 2.9 or higher
#   - IBM z/OS Core Collection (ibm.ibm_zos_core) installed
#   - Access to z/OS system with appropriate permissions
#   - Proper setup of Ansible inventory file with z/OS target information
#   - COBOL compiler installed on the target system
#
# Usage:
#   Basic execution:
#     ansible-playbook -i <inventory_file> COBOL_Customization_Setup.yml
#
#   With increased verbosity:
#     ansible-playbook -i <inventory_file> COBOL_Customization_Setup.yml -v
#
# Variables:
#   adcd_ver: ADCD version (default: Z25C)
#   cobol_hlq: High-level qualifier for COBOL installation (default: IGY640)
#
# Notes:
#   - Ensure that the necessary permissions and system access are in place before running.
#   - Review and adjust variables as needed for your environment.
#   - The playbook includes error handling for file operations.
#   - Debug messages are displayed only in verbose mode (-v).
#
# Examples:
#   1. Run the playbook with default settings:
#      ansible-playbook -i inventories/inventory.yml COBOL_Customization_Setup.yml
#
#   2. Run the playbook with verbose output:
#      ansible-playbook -i inventories/inventory.yml COBOL_Customization_Setup.yml -v
#
#   3. Run the playbook with custom COBOL HLQ:
#      ansible-playbook -i inventories/inventory.yml COBOL_Customization_Setup.yml -e "cobol_hlq=IGY650"
#
################################################################################

---
- name: COBOL Customization Setup
  hosts: ben_s0w1 
  collections:
    - ibm.ibm_zos_core
  gather_facts: no

  vars:
    adcd_ver: Z25C
    cobol_hlq: IGY640

  environment: "{{ environment_vars }}"

  tasks:
    - name: Verify connectivity
      zos_ping:
      register: zos_ping_result

    - name: Display ping response
      debug:
        var: zos_ping_result
        verbosity: 1

    - name: Copy COBOL procedures
      block:
        - name: Copy COBOL procedures to USER PROCLIB
          zos_copy:
            src: "{{ cobol_hlq }}.SIGYPROC({{ item }})"
            dest: "USER.{{ adcd_ver }}.PROCLIB({{ item }})"
            remote_src: true
          loop:
            - IGYQC
            - IGYQCB
            - IGYQCBG
          register: copy_result
      rescue:
        - name: Log COBOL procedure copy errors
          debug:
            msg: "Error occurred during COBOL procedure copy: {{ ansible_failed_result }}"

    - name: Update IGYQC procedure
      block:
        - name: Update LIBPRF1 and add CPARM parameter
          zos_lineinfile:
            src: "USER.{{ adcd_ver }}.PROCLIB(IGYQC)"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter | default(omit) }}"
          loop:
            - { regexp: "^//             LIBPRF1=&LIBPRFX", line: "//             LIBPRF1=&LIBPRFX," }
            - { insertafter: "^//             LIBPRF1=&LIBPRFX,", line: "//             CPARM=''" }
            - { regexp: "^//COBOL  EXEC PGM=IGYCRCTL,REGION=0M", line: "//COBOL  EXEC PGM=IGYCRCTL,REGION=0M,PARM='&CPARM'" }
      rescue:
        - name: Log IGYQC update errors
          debug:
            msg: "Error occurred during IGYQC update: {{ ansible_failed_result }}"

    - name: Update IGYQCB procedure
      block:
        - name: Update PGMLIB and add CPARM parameter
          zos_lineinfile:
            src: "USER.{{ adcd_ver }}.PROCLIB(IGYQCB)"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter | default(omit) }}"
          loop:
            - { regexp: "^//             PGMLIB='&&GOSET',GOPGM=GO", line: "//             PGMLIB='&&GOSET'," }
            - { insertafter: "^//             PGMLIB='&&GOSET',", line: "//             CPARM=''," }
            - { insertafter: "^//             CPARM='',", line: "//             GOPGM=GO" }
            - { regexp: "^//COBOL  EXEC PGM=IGYCRCTL,REGION=0M", line: "//COBOL  EXEC PGM=IGYCRCTL,REGION=0M,PARM='&CPARM'" }
      rescue:
        - name: Log IGYQCB update errors
          debug:
            msg: "Error occurred during IGYQCB update: {{ ansible_failed_result }}"

    - name: Update IGYQCBG procedure
      block:
        - name: Add CPARM, GPARM parameters and update STEPLIB
          zos_lineinfile:
            src: "USER.{{ adcd_ver }}.PROCLIB(IGYQCBG)"
            regexp: "{{ item.regexp | default(omit) }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter | default(omit) }}"
            insertbefore: "{{ item.insertbefore | default(omit) }}"
          loop:
            - { insertafter: "^//             LIBPRF1=&LIBPRFX,", line: "//             CPARM=''," }
            - { insertafter: "^//             BPARM='LIST=NOIMP',", line: "//             GPARM=''," }
            - { regexp: "^//COBOL  EXEC PGM=IGYCRCTL,REGION=0M", line: "//COBOL  EXEC PGM=IGYCRCTL,REGION=0M,PARM='&CPARM'" }
            - { regexp: "^//       REGION=0M", line: "//       REGION=0M,PARM='&GPARM'" }
            - { insertbefore: "^//STEPLIB  DD  DSNAME=&LIBPRF1..SCEERUN2,DISP=SHR", line: "//STEPLIB  DD  DSNAME=ISM330.SEQAMOD,DISP=SHR" }
            - { regexp: "^//STEPLIB  DD  DSNAME=&LIBPRF1..SCEERUN2,DISP=SHR", line: "//         DD  DSNAME=&LIBPRF1..SCEERUN2,DISP=SHR" }
      rescue:
        - name: Log IGYQCBG update errors
          debug:
            msg: "Error occurred during IGYQCBG update: {{ ansible_failed_result }}"

    - name: Display task results
      debug:
        msg:
          - "COBOL procedures copy result: {{ copy_result }}"
          - "IGYQC update completed"
          - "IGYQCB update completed"
          - "IGYQCBG update completed"
        verbosity: 1