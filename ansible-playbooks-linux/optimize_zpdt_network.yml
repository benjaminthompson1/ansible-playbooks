################################################################################
# Optimizes network settings for z/PDT systems
#
# Requirements:
# - Ansible 2.9+
# - Root access
# - RHEL system
#
# Usage:
# ansible-playbook -i inventories/inventory.yml optimize_zpdt_network.yml --ask-become-pass
# Optional: -e "network_interface=enp86s0 make_persistent=true"
################################################################################

---
- name: Optimize network settings for z/PDT systems on ASUS NUC
  hosts: nuc
  become: yes
  become_user: root
  gather_facts: yes

  vars:
    network_interface: enp86s0
    offload_options:
      rx: false
      tso: false
      gso: false
      gro: false
      lro: false
    make_persistent: false

  tasks:

    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - ethtool
          - tuned
          - NetworkManager
        state: present

    - name: Verify network interface exists
      ansible.builtin.command: "ip link show {{ network_interface }}"
      register: interface_check
      failed_when: interface_check.rc != 0
      changed_when: false

    - name: Disable network offload options using ethtool (idempotent)
      community.general.ethtool:
        name: "{{ network_interface }}"
        offload: "{{ offload_options }}"

    - name: Increase NIC ring buffer sizes
      ansible.builtin.command: "ethtool -G {{ network_interface }} rx 4096 tx 4096"
      register: ring_buffer_result
      changed_when: ring_buffer_result.rc == 0
      failed_when: ring_buffer_result.rc != 0

    - name: Set RX interrupt coalescing (IGC-compatible)
      ansible.builtin.command: "ethtool -C {{ network_interface }} rx-usecs 32"
      register: coalesce_result
      changed_when: coalesce_result.rc == 0
      failed_when: coalesce_result.rc != 0

    - name: Tune TCP socket buffer sizes
      ansible.builtin.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
      loop:
        - { key: 'net.core.rmem_max', value: '16777216' }
        - { key: 'net.core.wmem_max', value: '16777216' }
        - { key: 'net.core.optmem_max', value: '40960' }
        - { key: 'net.ipv4.tcp_rmem', value: '4096 87380 16777216' }
        - { key: 'net.ipv4.tcp_wmem', value: '4096 65536 16777216' }
        - { key: 'net.ipv4.tcp_window_scaling', value: '1' }

    - name: Apply tuned profile for network throughput (if not already set)
      block:
        - name: Check current tuned profile
          ansible.builtin.command: tuned-adm active
          register: tuned_profile

        - name: Apply tuned profile
          ansible.builtin.command: tuned-adm profile network-throughput
          when: "'network-throughput' not in tuned_profile.stdout"

    - name: Persist ethtool settings using nmcli
      when: make_persistent | bool
      block:
        - name: Ensure connection name is available
          ansible.builtin.command: nmcli -g GENERAL.CONNECTION device show {{ network_interface }}
          register: connection_name
          changed_when: false
          failed_when: connection_name.rc != 0 or connection_name.stdout == ""

        - name: Persist ethtool offload settings via nmcli
          community.general.nmcli:
            conn_name: "{{ connection_name.stdout.strip() }}"
            type: ethernet
            ethtool:
              feature:
                rx: "off"
                tso: "off"
                gso: "off"
                gro: "off"
                lro: "off"

        - name: Reload NetworkManager connection
          ansible.builtin.command: "nmcli connection up '{{ connection_name.stdout.strip() }}'"
          changed_when: false
