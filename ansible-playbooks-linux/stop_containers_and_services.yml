# Playbook: stop_containers_and_services.yml
#
# Purpose:
#  This playbook stops and removes specified Docker containers (MQ and Jenkins)
#  and stops services (dockerManageZdap and UCD server) on target hosts.
#
# Usage:
#  ansible-playbook -i <inventory> <playbook>
#
# Required Variables:
#  - vault.yml: an Ansible Vault encrypted file containing the sudo password
#               for the target hosts (variable: ansible_become_password).
#
# Example:
#  ansible-playbook -i inventories stop_containers_and_services.yml --ask-vault-pass
#  ansible-playbook -i inventories stop_containers_and_services.yml -v --ask-vault-pass
---
- hosts: p52
  vars_files:
    - vault.yml
  tasks:
    # Stop and remove IBM MQ Docker container
    - name: Ensure MQ Docker container is stopped and removed
      docker_container:
        name: QM1
        state: "{{ item }}"
      loop:
        - stopped
        - absent

    # Stop and remove Jenkins Docker container
    - name: Ensure Jenkins Docker container is stopped and removed
      docker_container:
        name: jenkins
        state: "{{ item }}"
      loop:
        - stopped
        - absent

    # Execute dockerManageZdap script (down command)
    - name: Execute dockerManageZdap script (down command)
      ansible.builtin.command:
        cmd: "/home/ibmsys1/docker-compose/bin/dockerManageZdap.sh down"
      register: docker_manage_result

    # Display the result of the dockerManageZdap script execution
    - name: Show dockerManageZdap script output
      debug:
        var: docker_manage_result.stdout_lines

    # Stop UCD server
    - name: Ensure UCD server is stopped
      ansible.builtin.command:
        cmd: "/opt/ucd/server/bin/server stop"
      become: yes
      register: ucd_server_result

    # Display the result of the UCD server stop command
    - name: Show UCD server stop output
      debug:
        var: ucd_server_result.stdout_lines

