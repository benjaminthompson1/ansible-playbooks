################################################################################
# Playbook Name: Enhanced z31a Volume Backup
#
# Purpose:
#   This playbook automates the backup process of z31a volumes on a zPDT system.
#   It performs the following tasks:
#   - Checks the RHEL version of the system
#   - Verifies the existence of the source directory
#   - Creates the destination directory if it doesn't exist
#   - Archives the z31a volumes using tar with fast xz compression
#   - Verifies the creation of the archive
#   - Displays a success message with the RHEL version
#
# Requirements:
#   - Ansible 2.9 or higher
#   - Access to zPDT system with appropriate permissions
#   - Sufficient disk space in the destination directory for the backup
#
# Usage:
#   Basic execution:
#     ansible-playbook -i <inventory_file> backup_z31a_volumes.yml
#
#   With increased verbosity:
#     ansible-playbook -i <inventory_file> backup_z31a_volumes.yml -v
#
# Variables:
#   src_dir: Source directory containing z31a volumes (default: "/home/ibmsys1/volumes-z31a")
#   dest_dir: Destination directory for the backup (default: "/home/ibmsys1/volumes-backup")
#   archive_name: Name of the archive file (default: "volumes-z31a-YYYYMMDD.tar.xz")
#
# Notes:
#   - Ensure that the necessary permissions and system access are in place before running.
#   - The playbook uses the current date in the archive filename.
#   - Fast xz compression is used to balance between compression ratio and speed.
#   - The playbook includes error handling for critical operations.
#
# Examples:
#   1. Run the playbook with default settings:
#      ansible-playbook -i inventories/inventory.yml backup_z31a_volumes.yml
#
#   2. Run the playbook with verbose output:
#      ansible-playbook -i inventories/inventory.yml backup_z31a_volumes.yml -v
#
#   3. Run the playbook with custom source and destination directories:
#      ansible-playbook -i inventories/inventory.yml backup_z31a_volumes.yml -e "src_dir=/custom/source dest_dir=/custom/backup"
#
################################################################################

---
- name: Enhanced z31a Volume Backup
  hosts: zPDT
  gather_facts: yes

  vars:
    src_dir: "/home/ibmsys1/volumes-z31a"
    dest_dir: "/home/ibmsys1/volumes-backup"
    archive_name: "volumes-z31a-{{ ansible_date_time.date | replace('-', '') }}.tar.xz"

  tasks:
    - name: Check RHEL version
      ansible.builtin.command: cat /etc/redhat-release
      register: rhel_version
      changed_when: false

    - name: Verify source directory
      ansible.builtin.stat:
        path: "{{ src_dir }}"
      register: src_dir_stat

    - name: Fail if source directory does not exist
      ansible.builtin.fail:
        msg: "Source directory {{ src_dir }} does not exist."
      when: not src_dir_stat.stat.exists

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ dest_dir }}"
        state: directory
        mode: '0755'

    - name: Archive z31a volumes
      ansible.builtin.command: >
        tar -c -I 'xz --fast' -f {{ dest_dir }}/{{ archive_name }} -C {{ src_dir }} .
      register: tar_result
      failed_when: tar_result.rc != 0

    - name: Verify archive creation
      ansible.builtin.stat:
        path: "{{ dest_dir }}/{{ archive_name }}"
      register: archive_stat

    - name: Display backup summary
      ansible.builtin.debug:
        msg:
          - "z31a Volume Backup Summary:"
          - "- RHEL Version: {{ rhel_version.stdout }}"
          - "- Source Directory: {{ src_dir }}"
          - "- Destination Directory: {{ dest_dir }}"
          - "- Archive Name: {{ archive_name }}"
          - "- Archive Size: {{ (archive_stat.stat.size | default(0) / 1024 / 1024) | round(2) }} MB"
          - "- Backup Status: {{ 'Successful' if archive_stat.stat.exists else 'Failed' }}"

    - name: Final status check
      ansible.builtin.assert:
        that:
          - src_dir_stat.stat.exists
          - archive_stat.stat.exists
        fail_msg: "z31a volume backup failed. Check the summary for details."
        success_msg: "z31a volume backup completed successfully."

  handlers:
    - name: Log successful backup
      ansible.builtin.debug:
        msg: "Archive created successfully. RHEL Version: {{ rhel_version.stdout }}"
      listen: "backup_success"